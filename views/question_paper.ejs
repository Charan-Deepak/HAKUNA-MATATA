<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            background-color: black;
            color: rgb(250, 250, 249);
        }
    </style>
</head>
<body>
    <form class="main_form" action="/marks_page" method="post">
    <!-- <a style="color:rgb(255, 111, 0)" class="homepage" href="/">Homepage</a> -->
    <!-- <a style="color:rgb(255, 111, 0)" id="create-quiz" class="user" name="user_name">profile</a> -->
    <h1 id="quiz_name" style=" text-transform: capitalize;;">hello</h1>
    <div id="timer"></div>
    <div id="parent">
    <div id="code"></div>
    <div id="message"></div> </div>
    <button  class="done"  type="button"  >DONE</button>
    <button type="submit" id="submit" class="submit">submit</button> 
    </form> 
</body>
<script>

    // Extract the query parameter from the URL
   // const params = new URLSearchParams(window.location.search);//to get the test code from admin_question_new
    const message =JSON.parse('<%- test%>');
    //const user_name=params.get('user_name');
    console.log(message);
    message_length=message.form.length

   // Convert the object to a string representation
   // const messageString = JSON.stringify(message);
    
    
        console.log('<%=username%>')
        // Display the message wherever needed in your HTML
        document.getElementById('code').textContent ="This Quiz Code: "+ '<%=quiz_code%>';
        //document.getElementById("create-quiz").href='/user?user_name='+'%=username%>';
        document.getElementById('quiz_name').textContent =message.quiz_name;

        let total_marks=0;
        let mark_to_student=0;
        function testpaper(){
        
        const div=document.createElement("div");//creating div
        div.id="question";
        // let divs=[];
        console.log(message.length)
        for(var i=0;i<message_length;i++){
            //const divs=document.createElement("div");//creating div
            //divs.id="question${i+1}";
            const form=document.createElement("form");//creating form 
            form.className="form"+i;//i is for different forms of class name like form1,form2...
            
            total_marks=total_marks+message.form[i].marks;
        if(message.form[i].type==3){
        form.innerHTML=`<form class="form${i}">
        <div id="question${i+1}">
            <h4 id="question${i+1}_p" style="display: flex; justify-content: space-between;">${i+1}. ${JSON.stringify(message.form[i].text).replace(/"/g, '')}<span style="margin-right:20vw;">Marks:${JSON.stringify(message.form[i].marks).replace(/"/g, '')}</span></h4>
          
          <span>A. <span> <input id="option_type_text${i}" style="text-decoration: underline; type="test" name=>
        </div>
        `}else if(message.form[i].type==1){
            form.innerHTML=`
            <div id="question${i+1}">
                <h4 id="question${i+1}_p" style="display: flex; justify-content: space-between;">${i+1}. ${JSON.stringify(message.form[i].text).replace(/"/g, '')}<span style="margin-right:20vw;">Marks:${JSON.stringify(message.form[i].marks).replace(/"/g, '')}</span></h4>
                    <input type="radio" id="option1${i}" name="correct${i}" value="1" >
                    
                    <label for="option1${i}" > ${JSON.stringify(message.form[i].option1[0]).replace(/"/g, '')}</label><br>
                     
                     <input type="radio" id="option2${i}" name="correct${i}" value="2" >
                    
                    <label for="option2${i}" > ${JSON.stringify(message.form[i].option1[1]).replace(/"/g, '')}</label><br>
                    <input type="radio" id="option3${i}" name="correct${i}" value="3" >
                    
                    <label for="option3${i}" > ${JSON.stringify(message.form[i].option1[2]).replace(/"/g, '')}</label><br>
                    <input type="radio" id="option4${i}" name="correct${i}" value="4">
                    
                    <label for="option4${i}" > ${JSON.stringify(message.form[i].option1[3]).replace(/"/g, '')}</label>
                   
            </div> `
        }else if(message.form[i].type==2){
            form.innerHTML=`
            <div id="question${i+1}">
                <h4 id="question${i+1}_p" style="display: flex; justify-content: space-between;">${i+1}. ${JSON.stringify(message.form[i].text).replace(/"/g, '')}<span style="margin-right:20vw;">Marks:${JSON.stringify(message.form[i].marks).replace(/"/g, '')}</span></h4>

                  <input type="checkbox" id="option_checkbox1${i}" name="correct_checkboxes1${i}" value="1" >
                    
                    <label for="option_checkbox1${i}" > ${JSON.stringify(message.form[i].option1[0]).replace(/"/g, '')}</label><br>
                    
                     <input type="checkbox" id="option_checkbox2${i}" name="correct_checkboxes2${i}" value="2" >
                    
                    <label for="option_checkbox2${i}" > ${JSON.stringify(message.form[i].option1[1]).replace(/"/g, '')}</label><br>
                    <input type="checkbox" id="option_checkbox3${i}" name="correct_checkboxes3${i}" value="3" >
                    
                    <label for="option_checkbox3${i}" > ${JSON.stringify(message.form[i].option1[2]).replace(/"/g, '')}</label><br>
                    <input type="checkbox" id="option_checkbox4${i}" name="correct_checkboxes4${i}" value="4" >
                    
                    <label for="option_checkbox4${i}" > ${JSON.stringify(message.form[i].option1[3]).replace(/"/g, '')}</label>
                   
            </div></form> `
        }
        div.appendChild(form);//adding the inside of div
        window['form' + i] = form;
    }
        // Find the parent div
        const parentDiv = document.getElementById('parent');

        // Find the reference div (the one after which you want to append the new div)
        const referenceDiv = parentDiv.children[1]; // Index 1 refers to the second child div

        // Insert the new div after the reference div
        parentDiv.insertBefore(div, referenceDiv.nextSibling);
    
    }
    testpaper();//calling the function


    var answerData = []; // Array to store answer data

    function submit_form(j) {
        var text_answers_checkbox = [];
        var text_a;
        var option_correct_radio;
        console.log(j);
        var mark=0;
        // Accessing the form
        var final_form = window["form" + j];
        if (final_form) { // If form exists

            //let option_type_read = final_form.querySelector(`input[name='option${j}']:checked`);
            var option_type = message.form[j].type;
    
            if (option_type == 1) {
                // Add event listeners to each radio button
                let radioBtns = final_form.querySelectorAll(`input[name='correct${j}']`);
    
                // Define a function to find the selected radio button
                let findSelected = () => {
                    let selected = final_form.querySelector(`input[name='correct${j}']:checked`);
                    if (selected) {
                        option_correct_radio = selected.value;
                    } else {
                        option_correct_radio = ""; // Handle case where no radio button is checked
                    }

                    if(parseInt(option_correct_radio)==message.form[j].correct_answer){
                        mark_to_student+=message.form[j].marks;
                        mark=message.form[j].marks;
                    }
                };
    
                // Add event listeners to each radio button
                radioBtns.forEach(radioBtn => {
                    radioBtn.addEventListener("change", findSelected);
                });
    
                // Call the function initially to set the default value
                findSelected();
            } else if (option_type == 2) {
                // Get options for checkbox type
                var count=0;
                for (var k = 0; k < 4; k++) {
                    let option_answer = final_form.querySelector(`input[name='correct_checkboxes${k+1}${j}']:checked`); // Corrected selector syntax
                    if (option_answer) {
                        text_answers_checkbox.push(option_answer.value);
                    } 
                    if(parseInt(text_answers_checkbox[k])==message.form[j].option1_answer_checkbox[k]){
                        count++;
                    }}
                    if(count==message.form[j].option1_answer_checkbox.length)
                    {mark_to_student+=message.form[j].marks;
                       mark= message.form[j].marks
                    }
                    else if(count>0 && count<message.form[j].option1_answer_checkbox.length){
                         mark_to_student+=Math.ceil(message.form[j].marks*(count/message.form[j].option1_answer_checkbox.length));
                         mark=Math.ceil(message.form[j].marks*(count/message.form[j].option1_answer_checkbox.length));
                    }

            } else if (option_type == 3) {
    
                text_a = final_form.querySelector("#option_type_text" + j)?final_form.querySelector("#option_type_text" + j).value:""; // Get text answer
                if(text_a==message.form[j].text_answer){
                    mark_to_student+=message.form[j].marks;
                    mark=message.form[j].marks;
                }
            }
    
    
            // Construct data object
            var data = {
                mark:mark,
                type: parseInt(option_type), // radio, checkbox, text
                option1_answer_checkbox: text_answers_checkbox,
                correct_answer: parseInt(option_correct_radio),
                text_answer: text_a
            };
    
            answerData.push(data); // Push data object to productData array
        }
        
       
    }
    
 async function done() {
                    // Display an alert
       //alert("Are you sure you want to submit the form?");
       for (var j = 0; j < message_length; j++) {
            await submit_form(j); //control to sumbit the form
           console.log(j);
        }
        answerData.push(total_marks);
        answerData.push(mark_to_student);
        console.log("hello");
        console.log(answerData);

    };

 document.querySelector('.done').addEventListener("click", done);
// Function to submit the form data

async function submitFormData() {
    const form1 = document.querySelector('.main_form');
    form1.addEventListener('submit', async (e) => {
        e.preventDefault();//prevent the submition of form
        
        console.log(JSON.stringify({answerData}))
        // Assuming productData is defined somewhere in your code
        try {
            const quiz_code='<%=quiz_code%>';
            const username='<%=username%>';
            // Make a POST request to submit the data
            const response =await fetch('/marks_page', {//posting the object of productData to server
                method: 'POST',                        
                  body:JSON.stringify({answerData,quiz_code,username,message}),
                  headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
        
            // Handle successful response from the server
            const responseData = await response.json(); // Assuming server sends back a text response
             console.log("99999");
            console.log(responseData); // Log the response from the server
            const url = `${responseData.url}?message=${encodeURIComponent(JSON.stringify(responseData.test_answer))}&user_name=${encodeURIComponent(username)}&test=${encodeURIComponent(JSON.stringify(responseData.test_))}`;
            window.location.href = url; // Redirect to the submission page
          
          

        } catch (error) {
            console.error('There was a problem with the fetch operation:', error);
        }
    }); 
}

document.querySelector('.submit').addEventListener('click', submitFormData);
//timer

document.addEventListener('DOMContentLoaded', function(){
    const timerDisplay=document.getElementById('timer');
    const submitBtn=document.getElementById('submit');
    let timeRemaining=message.time*60;
    if(timeRemaining!=0){
    const timerInterval = setInterval(updateTimer, 1000);
     // Handle click event on the submit button
     document.querySelector('.submit').addEventListener('click', function(){
        
        clearInterval(timerInterval); // Stop the timer when submitting 
       submitFormData();

});

    async function  updateTimer(){
        const hours=Math.floor(timeRemaining/(60*60));
        const minutes=Math.floor((timeRemaining%(60*60))/60);
        const seconds=((timeRemaining%(60*60))%60);
        const timerText = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        timerDisplay.textContent = `Time remaining: ${timerText}`;
        //check if time is up
        if(timeRemaining<=0){
            clearInterval(timerInterval);
            await done();
            document.querySelector('.submit').addEventListener('click', submitFormData);
            const submitButton = document.querySelector('.submit');
            submitButton.click(); // Trigger a click event
        }
        timeRemaining--;
    }
   

}
    

});

 </script>
  </html>