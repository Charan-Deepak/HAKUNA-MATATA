<%- include('adminhead'); -%>


  <!--Main Navigation-->
  
  <!--Main layout-->
  <main style="margin-top: 58px;">   
    <div class="questionblock"  style="padding: 25px;">
   <form class="main_form" action="/quiz" method="post">
    <h1 class="display-5"><%=quiz_name %></h1>
    <hr>
    



<div class="col-lg-4 col-md-12 mb-4">
  <div class="card">
    <div class="card-body">
          <!-- Default switch -->
<div class="form-check form-switch">
  
  <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" />
  <label class="form-check-label" for="flexSwitchCheckDefault"><p class="h6">Click for timer</p></label>
</div>


<div class="form-outline" id="timerSection" data-mdb-input-init>
  <input id="timer" name="timer" type="number"   required="true"  class="form-control" />
  <label class="form-label" for="typeNumber">Time in minutes</label>
</div>
    </div>
  </div>
</div>

    <button type="button" class="btn btn-success add" data-mdb-ripple-init>ADD</button> 
    <!-- <button type="submit" class="btn btn-primary btn-floating" data-mdb-ripple-init>
      <i class="fa fa-check" aria-hidden="true"></i>
    </button> -->

    <button type="button" class="btn btn-dark submit" style="float: right; margin-left: 10px;" data-mdb-ripple-init>DONE</button>
    <button type="submit" name="productData" class="btn btn-info done right" style="float: right; margin-right: 10px;" data-mdb-ripple-init>SUBMIT</button>

        </form>
    </div>



    <script>
     //dynamic field creation with javascript
     var i=0;
   //  let window={};
    const questionblock=document.querySelector(".questionblock");
    const addbtn=document.querySelector(".add");
   //remome input
   function removeInput(){
    this.parentElement.remove();
    i--;
   }
  
        //addinput question
            function addinputquestion(i){ 
             
            //form
            // const form=document.createElement("form");
            // form.className="form"+i;

            // //label
            // const qInputLabel=document.createElement("label");
            // qInputLabel.innerHTML="<br> <h4>Enter the Question: </h4> \n" ;
            // qInputLabel.style="font-family: Times New Roman ";
            // // qInput.style="font-size: 20px";
            // qInputLabel.htmlFor="text_question";

            // //textarea
            // const qInput=document.createElement("textarea");
            // qInput.type="textarea";
            // qInput.id="text_question"+i;
            // qInput.className="form-control";
            // qInput.rows="3";
            // qInput.name="text_question";
            // qInput.required = "true";

            // //markslabel
            // const label_marks=document.createElement("label");
            // label_marks.innerHTML="<br> <h5>Enter the marks: </h5> \n" ;
            // label_marks.style="font-family: Times New Roman ";
            // // qInput.style="font-size: 20px";
            // label_marks.htmlFor="question_marks";

            // //markstextarea
            // const marks=document.createElement("textarea");
            // marks.type="textarea";
            // marks.id="marks"+i;
            // marks.className="form-control";
            // marks.rows="2";
            // // marks.rows="1";
            // marks.name="question_marks";
            // marks.required = "true";



            // // Create a heading element
            // const marksheading = document.createElement("label");
            // marksheading.innerHTML = "<h4>Select the type of question: </h4>"
            // marksheading.style="font-family: Times New Roman ";
            // // Create the buttons
            // const radio = document.createElement("button");
            // radio.type = "button";
            // radio.id="option_type"+i;
            // radio.name="option"+i;
            // radio.className = "btn btn-primary btn-rounded";
            // radio.value="1";
            // radio.required="true";
            // radio.setAttribute("data-mdb-ripple-init", "");
            // radio.textContent = "SINGLE CORRECT";
            // radio.addEventListener("click", function() {
            // radio_answer(i); //radio button for to add radio type answers
            // });

            // const checkbox = document.createElement("button");
            // checkbox.type = "button";
            // checkbox.id="option_type"+i;
            // checkbox.name="option"+i;
            // checkbox.className = "btn btn-secondary btn-rounded";
            // checkbox.value="2";
            // checkbox.required="true";
            // checkbox.setAttribute("data-mdb-ripple-init", "");
            // checkbox.textContent = "MULTI CORRECT";
            // checkbox.addEventListener("click", function() {
            // checkbox_answer(i);//for addition of checkbox answers
            // });

            // const text1 = document.createElement("button");
            // text1.type = "button";
            // text1.id="option_type"+i;
            // text1.name="option"+i;
            // text1.className = "btn btn-warning btn-rounded";
            // text1.value="3";
            // text1.required="true";
            // text1.setAttribute("data-mdb-ripple-init", "");
            // text1.textContent = "SINGLE WORD";
            // text1.addEventListener("click", function() {
            // text_answer(i);//for addition of text answer
            // });


            // Create form element
            const form = document.createElement("form");
            form.style.width = "40rem";
            form.className="form"+i;

            const headingQuestion = document.createElement("h4");
            headingQuestion.style.fontFamily = "Times New Roman";
            headingQuestion.textContent = "Enter your question:";

            const divTextarea = document.createElement("div");
            divTextarea.className = "mb-4";
            divTextarea.setAttribute("data-mdb-input-init", "");

            // Create the textarea
            const textarea = document.createElement("textarea");
            textarea.type = "text-area" ;
            textarea.className = "form-control";
            textarea.id = "text_question"+i ;
            textarea.rows = "4";
            textarea.name = "text_question" ;
            textarea.required="true";//for must entry

            divTextarea.appendChild(textarea);

            // Create the second heading
            const headingMarks = document.createElement("h4");
            headingMarks.style.fontFamily = "Times New Roman";
            headingMarks.textContent = "Enter the marks:";

            const divNumber = document.createElement("div");
            divNumber.className = "";
            divNumber.setAttribute("data-mdb-input-init", "");

            // Create the number input
            const inputNumber = document.createElement("input");
            inputNumber.type = "number";
            inputNumber.id = "marks"+i;
            inputNumber.className = "form-control";
            inputNumber.name ="question_marks";
            inputNumber.required="true";

            // Append the number input to the div
            divNumber.appendChild(inputNumber);

            // Create the third heading
            const headingType = document.createElement("h4");
            headingType.style.fontFamily = "Times New Roman";
            headingType.textContent = "Select the type of question:";

            // Create the buttons for question type selection
            const buttonSingleCorrect = document.createElement("button");
            buttonSingleCorrect.type = "button";
            buttonSingleCorrect.className = "btn btn-secondary";
            buttonSingleCorrect.setAttribute("data-mdb-ripple-init", "");
            buttonSingleCorrect.id="option_type"+i;
            buttonSingleCorrect.name="option"+i;
            buttonSingleCorrect.value="1";
            buttonSingleCorrect.required="true";
            buttonSingleCorrect.textContent = "SINGLE CORRECT";
            buttonSingleCorrect.style.marginRight = "10px";
            buttonSingleCorrect.addEventListener("click", function() {
            radio_answer(i); //radio button for to add radio type answers
            });

            const buttonMultiCorrect = document.createElement("button");
            buttonMultiCorrect.type = "button";
            buttonMultiCorrect.className = "btn btn-primary";
            buttonMultiCorrect.setAttribute("data-mdb-ripple-init", "");
            buttonMultiCorrect.id="option_type"+i;
            buttonMultiCorrect.name="option"+i;
            buttonMultiCorrect.value="2";
            buttonMultiCorrect.required="true";
            buttonMultiCorrect.textContent = "MULTI CORRECT";
            buttonMultiCorrect.style.marginRight = "10px";
            buttonMultiCorrect.addEventListener("click", function() {
            checkbox_answer(i);//for addition of checkbox answers
            });

            const buttonSingleWord = document.createElement("button");
            buttonSingleWord.type = "button";
            buttonSingleWord.className = "btn btn-warning";
            buttonSingleWord.setAttribute("data-mdb-ripple-init", "");
            buttonSingleWord.id="option_type"+i;
            buttonSingleWord.name="option"+i;
            buttonSingleWord.value="3";
            buttonSingleWord.required="true";
            buttonSingleWord.textContent = "SINGLE WORD";
            buttonSingleWord.addEventListener("click", function() {
            text_answer(i);//for addition of text answer
            });


            const btn = document.createElement("button");
            btn.type = "button";
            btn.className = "btn btn-danger btn-rounded delete";
            btn.setAttribute("data-mdb-ripple-init", "");
            btn.textContent = "DELETE";
            btn.addEventListener("click",removeInput);

            //div of your option
            const your_options=document.createElement("div");
            your_options.id="your_options"+i;
            your_options.innerHTML="";
            
            //childappend
            // questionblock.appendChild(form);
            // form.appendChild(qInputLabel);
            // form.appendChild(qInput);
            // form.appendChild(label_marks);
            // form.appendChild(marks);
            // form.appendChild(marksheading);
            // form.appendChild(radio);
            // // form.appendChild(labelradio);
            // form.appendChild(checkbox);
            // // form.appendChild(labelcheckbox);
            // form.appendChild(text1);
          
            // // form.appendChild(labeltext1);
            // Append the elements to the form
            questionblock.appendChild(form);
            form.appendChild(document.createElement("br"));
            form.appendChild(headingQuestion);
            form.appendChild(divTextarea);
            form.appendChild(headingMarks);
            form.appendChild(divNumber);
            form.appendChild(document.createElement("br"));
            form.appendChild(headingType);
            form.appendChild(buttonSingleCorrect);
            form.appendChild(buttonMultiCorrect);
            form.appendChild(buttonSingleWord);
            form.appendChild(your_options);
            form.appendChild(document.createElement("br"));
            form.appendChild(btn);
            window['form' + i] = form;
            }
            
            // addbtn.addEventListener("click",addinputquestion(i));
            addbtn.addEventListener("click", function() {
            addinputquestion(i);
            i++
            });

        //value=1 
             function radio_answer(i){ 
              
               document.getElementById("your_options"+i).innerHTML = `


              <div class="form-check radio">
                <br>

                <p class="lead">
                  Enter the options
                </p>

                <div  class= "mb-4">
                <input class="form-check-input" type="radio" name="correct${i}" id="option_correct_radio_${i}" value=1 required/>
                <div data-mdb-input-init>
                <input type="text" class="form-control"  id="text_question1${i}" name="option_array" required="true"/>
                </div>
                </div>
                
                <div  class="mb-4">
                <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=2 required/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question2${i}" name="option_array" required="true"/>
                </div>
                </div>

                <div  class="mb-4">
                <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=3 required/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question3${i}" name="option_array" required="true"/>
                </div>
                </div>

                <div  class="mb-4">
                <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=4 required/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question4${i}" name="option_array" required="true"/>
                </div>
                </div>
               

              </div>


                `;
             }

            //  value=2
             function checkbox_answer(i){ 
               document.getElementById("your_options"+i).innerHTML = `
                    <div class="form-check checkbox">
                <br>

                <p class="lead">
                  Enter the options
                </p>

                <div  class= "mb-4">
                <input class="form-check-input" type="checkbox" id="text_answer_checkbox1${i}" name="correct_checkboxes1${i}" value="1"/>
                <div data-mdb-input-init>
                <input type="text" class="form-control"   id="text_question1${i}" name="option_array" required="true"/>
                </div>
                </div>
                
                <div  class="mb-4">
                <input class="form-check-input" type="checkbox" id="text_answer_checkbox2${i}" name="correct_checkboxes2${i}" value="2"/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question2${i}" name="option_array" required="true"/>
                </div>
                </div>

                <div  class="mb-4">
                <input class="form-check-input" type="checkbox" id="text_answer_checkbox3${i}" name="correct_checkboxes3${i}" value="3"/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question3${i}" name="option_array" required="true"/>
                </div>
                </div>

                <div  class="mb-4">
                <input class="form-check-input" type="checkbox" id="text_answer_checkbox4${i}" name="correct_checkboxes4${i}" value="4"/>
                <div data-mdb-input-init>
                <input type="text" class="form-control" id="text_question4${i}" name="option_array" required="true"/>
                </div>
                </div>
               

              </div>

                    `;
            } 

            // value=3 
             function text_answer(i){ 
                document.getElementById("your_options"+i).innerHTML = `
                    <div class="text">
                      <br>
                        <p class="lead">
                          Enter the answer (at max in 3 words) 
                        </p>
                        
                        <div class="mb-4" data-mdb-input-init>
                          <input type="text" id="option_type_text${i}" name="answer_text" required="true" class="form-control" />
                        </div>
                    </div>
                    `;
            } 

            var productData = []; // Array to store product data

            function submit_form(j) {
                var text_answers_checkbox = [];
                var text_options = [];
                var text_a;
                var option_correct_radio;
                console.log(j);
                // Accessing the form
                var final_form = window["form" + j];
                if (final_form) { // If form exists
                    var text_question_var = final_form.querySelector("#text_question" + j).value; // Get text question value
                    var marks=final_form.querySelector("#marks"+j).value;
                    let option_type_read = final_form.querySelector(`input[name='option${j}']:checked`);
                    var option_type = option_type_read ? option_type_read.value : "";
            
                    if (option_type == 1) {
                        // Add event listeners to each radio button
                        let radioBtns = final_form.querySelectorAll(`input[name='correct${j}']`);
            
                        // Define a function to find the selected radio button
                        let findSelected = () => {
                            let selected = final_form.querySelector(`input[name='correct${j}']:checked`);
                            if (selected) {
                                option_correct_radio = selected.value;
                            } else {
                                option_correct_radio = ""; // Handle case where no radio button is checked
                            }
                        };
            
                        // Add event listeners to each radio button
                        radioBtns.forEach(radioBtn => {
                            radioBtn.addEventListener("change", findSelected);
                        });
            
                        // Call the function initially to set the default value
                        findSelected();
            
                        // Get options for radio type
                        for (var k = 1; k <= 4; k++) {
                            var option = final_form.querySelector("#text_question" + k + j);
                            if (option) {
                                text_options.push(option.value);
                            }
                        }
                    } else if (option_type == 2) {
            
                        for (var k = 1; k <= 4; k++) {
                            var option = final_form.querySelector("#text_question" + k + j);
                            if (option) {
                                text_options.push(option.value);
                            }
                        }
                        console.log(text_options);
                        // Get options for checkbox type
            
                        for (var k = 1; k <= 4; k++) {
                            let option_answer = final_form.querySelector(`input[name='correct_checkboxes${k}${j}']:checked`); // Corrected selector syntax
                            if (option_answer) {
                                text_answers_checkbox.push(option_answer.value);
                            }
            
                        }
                    } else if (option_type == 3) {
            
                        text_a = final_form.querySelector("#option_type_text" + j)?final_form.querySelector("#option_type_text" + j).value:""; // Get text answer
                    }
            
            
                    // Construct data object
                    var data = {
                        question_no: j,
                        text: text_question_var,
                        marks:marks,
                        type: parseInt(option_type), // radio, checkbox, text
                        option1: text_options,
                        option1_answer_checkbox: text_answers_checkbox,
                        correct_answer: parseInt(option_correct_radio),
                        text_answer: text_a
                    };
            
                    productData.push(data); // Push data object to productData array
                }
                console.log(productData); // Log productData for debugging
            
            }
            
            // addbtn.addEventListener("click",addinputquestion(i));
            addbtn.addEventListener("click", function() {
                i++;
                addinputquestion(i);
            });
            
            // Now you can use the productData as needed
            // var submit = document.querySelector('.submit');
            document.querySelector('.submit').addEventListener("click", async function() {
                            // Display an alert
           // alert("Are you sure you want to submit the form?");


                for (var j = 1; j <= i; j++) {
                    await submit_form(j); //control to sumbit the form
                   console.log(j);
                }
                document.querySelector(".main_form").value = JSON.stringify(productData); // Set value of submit button
            });

           


        // Function to submit the form data

       async function submitFormData() {
            const form1 = document.querySelector('.main_form');
            form1.addEventListener('submit', async (e) => {
                e.preventDefault();//prevent the submition of form
                
                //timer
                const time=document.getElementById("timer").value;
                console.log(100000,i)
                console.log(JSON.stringify({productData}))
                // Assuming productData is defined somewhere in your code
                try {
                    const quizName='<%=quiz_name %>';
                    const username='<%=username%>';
                    
                    // Make a POST request to submit the data
                    const response =await fetch('/admin_question_new', {//posting the object of productData to server
                        method: 'POST',                        
                          body:JSON.stringify({productData,quizName,username,time}),
                          headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                
                    // Handle successful response from the server
                    const responseData = await response.json(); // Assuming server sends back a text response
                    console.log(responseData); // Log the response from the server
                    const url = `${responseData.url}?message=${encodeURIComponent(JSON.stringify(responseData.test))}&user_name=${encodeURIComponent(username)}&quizName=${encodeURIComponent('<%=quiz_name %>')}`;
                    window.location.href = url; // Redirect to the submission page
                   // const responseDataString = JSON.stringify(responseData);
                    // Convert the object to a JSON string
                   // const responseDataString = JSON.stringify(responseData.test);
                   // console.log(responseDataString);
      
                  // const url = `http://127.0.0.1:5500/views/submittionpage.html?message=${encodeURIComponent(responseDataString)}`;

                    //const filename = '/submittionpage.html'; // Name of the file in the same folder
                  //const url = `${req.protocol}://${req.get('host')}${filename}?message=${encodeURIComponent(responseDataString)}`;

                } catch (error) {
                    console.error('There was a problem with the fetch operation:', error);
                }
            }); 
        }
        
       

        // Event listener for the "DONE" button
        document.querySelector('.done').addEventListener('click', submitFormData);
        document.getElementById('timer_op').addEventListener('change', function() {
            var selectedValue = this.value;
            var timerSection = document.getElementById('timerSection');
    
            if (selectedValue === 'yes') {
                timerSection.style.display = 'block'; // Show the timerSection
            } else {
                timerSection.style.display = 'none';  // Hide the timerSection
                const timerInput = document.getElementById('timer');
                timerInput.value = 0;
            }
        });


    </script>
  </main>

<%- include('partials/mdbfooter'); -%>
