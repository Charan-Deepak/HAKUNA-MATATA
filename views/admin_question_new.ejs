<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* .questionblock {
            height: 3rem;
        } */

        input[type="text"] {
            border: none;
            border-bottom: 1.5px solid rgb(47, 43, 50);
        }

        input[type="text"]:focus {
            border: none;
            border-bottom: 1.5px solid rgb(85, 82, 88);
            background-color: rgb(85, 82, 88);
        }

        .more {
            border: 1.5px solid green;
        }

        /* .add{
            text-decoration: none;
            display:inline-block;
            width:30px;
            height:30px;
            background: #8b8b8b;
            font-size: 2rem;
            font-weight: bold;
            color:#fff;
            display: flex;
            justify-content: center;
            align-items: center;

        } */
        .delete{
            text-decoration: none;
            display:inline-block;
            width:30px;
            height:30px;
            background: #e60808;
            font-size: 2rem;
            font-weight: bold;
            color:#fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
    </style>
    <title>Admin questions</title>
     <%- include('partials/mdbheader'); -%> 
</head>
<body>
 
    <style>
        body {
  background-color: #fbfbfb;
}

@media (min-width: 991.98px) {
  main {
    padding-left: 240px;
  }
}

/* Sidebar */
.sidebar {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  padding: 58px 0 0; /* Height of navbar */
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 5%), 0 2px 10px 0 rgb(0 0 0 / 5%);
  width: 240px;
  z-index: 600;
}

@media (max-width: 991.98px) {
  .sidebar {
    width: 100%;
  }
}
.sidebar .active {
  border-radius: 5px;
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}

.sidebar-sticky {
  position: relative;
  top: 0;
  height: calc(100vh - 48px);
  padding-top: 0.5rem;
  overflow-x: hidden;
  overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
}
    </style>

    <!--Main Navigation-->
<header>
    <!-- Sidebar -->
    <nav id="sidebarMenu" class="collapse d-lg-block sidebar collapse bg-white">
      <div class="position-sticky">
        <div class="list-group list-group-flush mx-3 mt-4">
          <a
            href="#"
            class="list-group-item list-group-item-action py-2 ripple"
            aria-current="true"
          >
            <i class="fas fa-tachometer-alt fa-fw me-3"></i><span>Main dashboard</span>
          </a>
          <a href="#" class="list-group-item list-group-item-action py-2 ripple active">
            <i class="fas fa-chart-area fa-fw me-3"></i><span>Create quizz</span>
          </a>
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-lock fa-fw me-3"></i><span>000000</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-chart-line fa-fw me-3"></i><span>000000</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple">
            <i class="fas fa-chart-pie fa-fw me-3"></i><span>000000</span>
          </a>
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-chart-bar fa-fw me-3"></i><span>000000</span></a
          >
          <!-- <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-globe fa-fw me-3"></i><span>International</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-building fa-fw me-3"></i><span>Partners</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-calendar fa-fw me-3"></i><span>Calendar</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-users fa-fw me-3"></i><span>Users</span></a
          >
          <a href="#" class="list-group-item list-group-item-action py-2 ripple"
            ><i class="fas fa-money-bill fa-fw me-3"></i><span>Sales</span></a
          > -->
        </div>
      </div>
    </nav>
    <!-- Sidebar -->
  
    <!-- Navbar -->
    <nav id="main-navbar" class="navbar navbar-expand-lg navbar-light bg-white fixed-top">
      <!-- Container wrapper -->
      <div class="container-fluid">
        <!-- Toggle button -->
        <button
          class="navbar-toggler"
          type="button"
          data-mdb-toggle="collapse"
          data-mdb-target="#sidebarMenu"
          aria-controls="sidebarMenu"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <i class="fas fa-bars"></i>
        </button>
  
        <!-- Brand -->
        <a class="navbar-brand" href="#">
          <img
            src="pic16.jpg"
            height="40"
            alt="MDB Logo"
            loading="lazy"
          />
        </a>
        <!-- Search form -->
        <form class="d-none d-md-flex input-group w-auto my-auto">
          <input
            autocomplete="off"
            type="search"
            class="form-control rounded"
            placeholder='Search (ctrl + "/" to focus)'
            style="min-width: 225px;"
          />
          <span class="input-group-text border-0"><i class="fas fa-search"></i></span>
        </form>
  
        <!-- Right links -->
        <ul class="navbar-nav ms-auto d-flex flex-row">
          <!-- Notification dropdown -->
          <li class="nav-item dropdown">
            <a
              class="nav-link me-3 me-lg-0 dropdown-toggle hidden-arrow"
              href="#"
              id="navbarDropdownMenuLink"
              role="button"
              data-mdb-toggle="dropdown"
              aria-expanded="false"
            >
              <i class="fas fa-bell"></i>
              <span class="badge rounded-pill badge-notification bg-danger">1</span>
            </a>
            <ul
              class="dropdown-menu dropdown-menu-end"
              aria-labelledby="navbarDropdownMenuLink"
            >
              <li>
                <a class="dropdown-item" href="#">Some news</a>
              </li>
              <li>
                <a class="dropdown-item" href="#">Another news</a>
              </li>
              <li>
                <a class="dropdown-item" href="#">Something else here</a>
              </li>
            </ul>
          </li>
  
          <!-- Icon -->
          <li class="nav-item">
            <a class="nav-link me-3 me-lg-0" href="#">
              <i class="fas fa-fill-drip"></i>
            </a>
          </li>
          <!-- Icon -->
          <li class="nav-item me-3 me-lg-0">
            <a class="nav-link" href="#">
              <i class="fab fa-github"></i>
            </a>
          </li>
  
          <!-- Icon dropdown -->
          <li class="nav-item dropdown">
            <a
              class="nav-link me-3 me-lg-0 dropdown-toggle hidden-arrow"
              href="#"
              id="navbarDropdown"
              role="button"
              data-mdb-toggle="dropdown"
              aria-expanded="false"
            >
              <i class="united kingdom flag m-0"></i>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
              <li>
                <a class="dropdown-item" href="#"
                  ><i class="united kingdom flag"></i>English
                  <i class="fa fa-check text-success ms-2"></i
                ></a>
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="#"><i class="poland flag"></i>Polski</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="china flag"></i>中文</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="japan flag"></i>日本語</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="germany flag"></i>Deutsch</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="france flag"></i>Français</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="spain flag"></i>Español</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="russia flag"></i>Русский</a>
              </li>
              <li>
                <a class="dropdown-item" href="#"><i class="portugal flag"></i>Português</a>
              </li>
            </ul>
          </li>
  
          <!-- Avatar -->
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle hidden-arrow d-flex align-items-center"
              href="#"
              id="navbarDropdownMenuLink"
              role="button"
              data-mdb-toggle="dropdown"
              aria-expanded="false"
            >
              <img
                src="https://mdbcdn.b-cdn.net/img/Photos/Avatars/img (31).webp"
                class="rounded-circle"
                height="22"
                alt="Avatar"
                loading="lazy"
              />
            </a>
            <ul
              class="dropdown-menu dropdown-menu-end"
              aria-labelledby="navbarDropdownMenuLink"
            >
              <li>
                <a class="dropdown-item" href="#">My profile</a>
              </li>
              <li>
                <a class="dropdown-item" href="#">Settings</a>
              </li>
              <li>
                <a class="dropdown-item" href="#">Logout</a>
              </li>
            </ul>
          </li>
        </ul>
      </div>
      <!-- Container wrapper -->
    </nav>
    <!-- Navbar -->
  </header>
  <!-- Main Navigation -->
   <!--Main layout-->
  <main style="margin-top: 58px; margin-bottom: 100px;">
    <div class="questionblock">
   <form class="main_form" action="/admin_question_new"  method="post">
    <br>
    <h1 class="display-6"><%= quiz_name %></h1>
            <a href="#"class="add"><button type="button" class="btn btn-info" data-mdb-ripple-init>ADD</button></a>  
            <!-- <i class="fa-solid fa-plus"></i> -->
            <!-- onclick="document.location='default.asp'" -->
            <!-- <button type="button" class="btn btn-info" data-mdb-ripple-init>ADD</button> -->
            
            <button type="button" class="btn btn-warning submit" data-mdb-ripple-init>DONE</button>
            <!-- <button class="submit"  type="button"  >DONE</button>  -->
            <button type="submit" class="btn btn-success done" name="productData" data-mdb-ripple-init>SUBMIT</button>
            <!-- <button class="done"  type="submit" name="productData"  >submit</button>submiting the data -->
        
        </form>
    </div>
    <script>
        // import { Input, initMDB } from "mdb-ui-kit";
     //dynamic field creation with javascript
     var i=0;
     const brEl =  document.createElement("br");
    //  const brE2 =  document.createElement("&nbsp");
   //  let window={};
    const questionblock=document.querySelector(".questionblock");
    const addbtn=document.querySelector(".add");
   //remome input
   function removeInput(){
    this.parentElement.remove();
    i--;
   }
   
  
        //addinput question
            function addinputquestion(i){ 
             
            //form
            const form=document.createElement("form");//creating form 
            form.className="form"+i;//i is for different forms of class name like form1,form2...
           
            //text
            const label1=document.createElement("label");
            // label1.innerHTML="<h4> Enter your question </h4>";
            label1.textContent="1.Enter the question";
            label1.className="h6";
            label1.htmlFor="text_question";

            const div_test = document.createElement("div");
            // div_test.className = "form-outline";
            div_test.setAttribute("data-mdb-input-init", "");

            // Create textarea element
            const text = document.createElement("textarea");
            text.className = "form-control";
            text.id = "text_question"+i; // Set the id attribute
            text.rows = "3"; // Set the rows attribute
            text.columns = "4";
            text.name = "text_question"; // Set the name attribute
            text.required = true; // Set the required attribute

            // Create label element
            const label_div = document.createElement("label");
            label_div.className = "form-label";
            label_div.setAttribute("for", "textAreaExample"); // Set the for attribute
            // label_div.textContent = "Message"; // Set label text content




            // const div_test=document.createElement("div");
            // div_test.className = "form-outline";
            // div_test.setAttribute("data-mdb-input-init","");

            //  //text 
            // const text=document.createElement("textarea");
            // text.textContent="message";
          
            // text.id="text_question"+i;
            // text.name="text_question";
            // text.required;//for must entry
            // text.className="form-control";
            // text.rows="4";

            //marks label
            // const label_marks=document.createElement("label");
            // label_marks.innerHTML="Enter marks of Question:<br>";
            // label_marks.htmlFor="question_marks";

            const label_marks=document.createElement("label");
            // label1.innerHTML="<h4> Enter your question </h4>";
            label_marks.innerHTML="<h6>&nbsp 2.Input marks of the question &nbsp </h6>";
            // label_marks.className="h6";
            label_marks.htmlFor="question_marks";
            
            //marks input
            const marks=document.createElement("input");
            marks.type="number";
            marks.id="marks"+i;
            marks.name="question_marks";
            marks.required=true;//for must entry

            //choose option
            // const label123=document.createElement("label");
            // label123.innerHTML="Choose your options";
            // label123.htmlFor="text_question1";
            const label123=document.createElement("label");
            // label1.innerHTML="<h4> Enter your question </h4>";
            label123.innerHTML="<h6>&nbsp 3.Choose your options &nbsp </h6>";
            label123.className="h6";
            label123.htmlFor="text_question1";

            //select question
            const label2=document.createElement("label");
            label2.innerHTML="Select question type";
            
            //radio
            const radio=document.createElement("input");
            radio.type="radio";
            radio.id="option_type"+i;
            radio.name="option"+i;
            radio.value="1";
            radio.required=true; 
            const labelradio=document.createElement("label");
            labelradio.innerHTML="<p>&nbsp Single correct &nbsp</p>";
            // radio.addEventListener("click",radio_answer);
            radio.addEventListener("click", function() {
            radio_answer(i); //radio button for to add radio type answers
            });

             //checkbox
             const checkbox=document.createElement("input");
             checkbox.type="radio";
             checkbox.id="option_type"+i;
             checkbox.name="option"+i;
             checkbox.value="2";
             checkbox.required=true;
             const labelcheckbox=document.createElement("label");
             labelcheckbox.innerHTML="<p>&nbsp Multi correct &nbsp</p>";
             // checkbox.addEventListener("click",checkbox_answer);
             checkbox.addEventListener("click", function() {
             checkbox_answer(i);//for addition of checkbox answers
             });


           //text
           const text1=document.createElement("input");
           text1.type="radio";
           text1.id="option_type"+i;
           text1.name="option"+i;
           text1.value="3";
           text1.required=true;
           const labeltext1=document.createElement("label");
           labeltext1.innerHTML="<p>&nbsp Single word&nbsp</p>";
           // text1.addEventListener("click",text_answer);
           text1.addEventListener("click", function() {
           text_answer(i);//for addition of text answer
           });


            //delete
            // const btn=document.createElement("a");
            // btn.className="delete";
            // btn.innerHTML="&times";
            // btn.type="button";
            // btn.addEventListener("click",removeInput);

            // Create a button element
            const btn = document.createElement("button");

            // Set button attributes
            btn.type = "button";
            btn.className = "btn btn-danger";
            btn.setAttribute("data-mdb-ripple-init", "");

            // Set button inner HTML content
            btn.innerHTML = "DELETE";
            btn.addEventListener("click",removeInput);


            

            //div of your option
            const your_options=document.createElement("div");
            your_options.id="your_options"+i;
            // your_options.innerHTML="hello";
            
            //childappend
            questionblock.appendChild(form);//adding the inside of question block
            form.appendChild(label1);//adding the inside of form
            form.appendChild(brEl);
            form.appendChild(div_test);//adding the inside of form after label1
            div_test.appendChild(text);
            div_test.appendChild(label_div);
            form.appendChild(label_marks);
            form.appendChild(brEl);
            form.appendChild(brEl);
            form.appendChild(marks);
            form.appendChild(brEl);
            form.appendChild(label123);
            form.appendChild(radio);
            form.appendChild(labelradio);
            form.appendChild(checkbox);
            form.appendChild(labelcheckbox);
            form.appendChild(text1);
            form.appendChild(labeltext1);
            form.appendChild(your_options);
            form.appendChild(btn);
            window['form' + i] = form;
            }
            
          

        //value=1 
             function radio_answer(i){ 
              
                document.getElementById("your_options"+i).innerHTML = `
                <div class="radio"> 
                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=1 required checked/>
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question1${i}" class="form-control" name="option_array" required=true style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 1</label>
                          </div>
                    </div>

                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=2 required/>
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question2${i}" class="form-control" name="option_array" required=true style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 2</label>
                          </div>
                    </div>

                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=3 required/>
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question3${i}" class="form-control" name="option_array" required=true style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 3</label>
                          </div>
                    </div>

                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="radio" id="option_correct_radio_${i}" name="correct${i}" value=4 required/>
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question4${i}" class="form-control" name="option_array" required=true style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 4</label>
                          </div>
                    </div>

                  </div>
                
            `;
         }

            //  value=2
            function checkbox_answer(i){ 
                document.getElementById("your_options"+i).innerHTML = `
                   
                     <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="checkbox" id="text_answer_checkbox1${i}" name="correct_checkboxes1${i}" value=1 />
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question1${i}" class="form-control" name="option_array" style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 1</label>
                          </div>
                    </div>

                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="checkbox" id="text_answer_checkbox2${i}" name="correct_checkboxes2${i}" value=2 />
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question2${i}" class="form-control" name="option_array" style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 2</label>
                          </div>
                    </div>

                    <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="checkbox" id="text_answer_checkbox3${i}" name="correct_checkboxes3${i}" value=3 />
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question3${i}" class="form-control" name="option_array" style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 3</label>
                          </div>
                    </div>

                     <div class="form-check" style="margin-bottom: 10px;">
                      <input class="form-check-input" type="checkbox" id="text_answer_checkbox4${i}" name="correct_checkboxes4${i}" value=4 />
                        <div class="form-outline" data-mdb-input-init>
                        <input type="text" id="text_question4${i}" class="form-control" name="option_array" style="background-color: #F0F8FE; color: black; width:500px ; " required/>
                        <label class="form-label" for="typeText">Option 4</label>
                          </div>
                    </div>
                     `;
             } 

            // value=3 
            function text_answer(i){ 
                document.getElementById("your_options"+i).innerHTML = `

                    <div class="form-outline text" data-mdb-input-init style="margin-bottom: 10px;">
                      <input type="text" id="option_type_text${i}" name="answer_text" class="form-control" data-mdb-showcounter="true" maxlength="20" style="background-color: #F0F8FE; color: black;width:250px ; " required/>
                      <label class="form-label" for="form16">Answer</label>
                      <div class="form-helper"></div>
                    </div>
                    `;
            }
           
            var productData = []; // Array to store product data

            function submit_form(j) {
                var text_answers_checkbox = [];
                var text_options = [];
                var text_a;
                var option_correct_radio;
                console.log(j);
                // Accessing the form
                var final_form = window["form" + j];
                if (final_form) { // If form exists
                    var text_question_var = final_form.querySelector("#text_question" + j).value; // Get text question value
                    var marks=final_form.querySelector("#marks"+j).value;
                    let option_type_read = final_form.querySelector(`input[name='option${j}']:checked`);
                    var option_type = option_type_read ? option_type_read.value : "";
            
                    if (option_type == 1) {
                        // Add event listeners to each radio button
                        let radioBtns = final_form.querySelectorAll(`input[name='correct${j}']`);
            
                        // Define a function to find the selected radio button
                        let findSelected = () => {
                            let selected = final_form.querySelector(`input[name='correct${j}']:checked`);
                            if (selected) {
                                option_correct_radio = selected.value;
                            } else {
                                option_correct_radio = ""; // Handle case where no radio button is checked
                            }
                        };
            
                        // Add event listeners to each radio button
                        radioBtns.forEach(radioBtn => {
                            radioBtn.addEventListener("change", findSelected);
                        });
            
                        // Call the function initially to set the default value
                        findSelected();
            
                        // Get options for radio type
                        for (var k = 1; k <= 4; k++) {
                            var option = final_form.querySelector("#text_question" + k + j);
                            if (option) {
                                text_options.push(option.value);
                            }
                        }
                    } else if (option_type == 2) {
            
                        for (var k = 1; k <= 4; k++) {
                            var option = final_form.querySelector("#text_question" + k + j);
                            if (option) {
                                text_options.push(option.value);
                            }
                        }
                        console.log(text_options);
                        // Get options for checkbox type
            
                        for (var k = 1; k <= 4; k++) {
                            let option_answer = final_form.querySelector(`input[name='correct_checkboxes${k}${j}']:checked`); // Corrected selector syntax
                            if (option_answer) {
                                text_answers_checkbox.push(option_answer.value);
                            }
            
                        }
                    } else if (option_type == 3) {
            
                        text_a = final_form.querySelector("#option_type_text" + j)?final_form.querySelector("#option_type_text" + j).value:""; // Get text answer
                    }
            
            
                    // Construct data object
                    var data = {
                        question_no: j,
                        text: text_question_var,
                        marks:marks,
                        type: parseInt(option_type), // radio, checkbox, text
                        option1: text_options,
                        option1_answer_checkbox: text_answers_checkbox,
                        correct_answer: parseInt(option_correct_radio),
                        text_answer: text_a
                    };
            
                    productData.push(data); // Push data object to productData array
                }
                console.log(productData); // Log productData for debugging
            
            }
            
            // addbtn.addEventListener("click",addinputquestion(i));
            addbtn.addEventListener("click", function() {
                i++;
                addinputquestion(i);
            });
            
            // Now you can use the productData as needed
            // var submit = document.querySelector('.submit');
            document.querySelector('.submit').addEventListener("click", async function() {
                for (var j = 1; j <= i; j++) {
                    await submit_form(j); //control to sumbit the form
                   console.log(j);
                }
                document.querySelector(".main_form").value = JSON.stringify(productData); // Set value of submit button
            });

           


        // Function to submit the form data

       async function submitFormData() {
            const form1 = document.querySelector('.main_form');
            form1.addEventListener('submit', async (e) => {
                e.preventDefault();//prevent the submition of form
                
                console.log(100000,i)
                console.log(JSON.stringify({productData}))
                // Assuming productData is defined somewhere in your code
                try {
                    const quizName='<%=quiz_name %>';
                    const username='<%=username%>';
                    // Make a POST request to submit the data
                    const response =await fetch('/admin_question_new', {//posting the object of productData to server
                        method: 'POST',                        
                          body:JSON.stringify({productData,quizName,username}),
                          headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                
                    // Handle successful response from the server
                    const responseData = await response.json(); // Assuming server sends back a text response
                    console.log(responseData); // Log the response from the server
                    const url = `${responseData.url}?message=${encodeURIComponent(JSON.stringify(responseData.test))}&user_name=${encodeURIComponent(username)}&quizName=${encodeURIComponent('<%=quiz_name %>')} `;
                    window.location.href = url; // Redirect to the submission page
                   // const responseDataString = JSON.stringify(responseData);
                    // Convert the object to a JSON string
                   // const responseDataString = JSON.stringify(responseData.test);
                   // console.log(responseDataString);
      
                  // const url = `http://127.0.0.1:5500/views/submittionpage.html?message=${encodeURIComponent(responseDataString)}`;

                    //const filename = '/submittionpage.html'; // Name of the file in the same folder
                  //const url = `${req.protocol}://${req.get('host')}${filename}?message=${encodeURIComponent(responseDataString)}`;

                } catch (error) {
                    console.error('There was a problem with the fetch operation:', error);
                }
            }); 
        }
        
       document.querySelector('.done').addEventListener('click',submitFormData);
            
    </script>
     
</body>
<%- include('partials/mdbfooter'); -%>
</html>

